<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\build\app.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\build\app.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050169: Last Updated: Mon Aug 03 09:48:06 2015
<BR><P>
<H3>Maximum Stack Usage =        224 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
system_open &rArr; on_sys_open &rArr; model_contral_init &rArr; model_change &rArr; normal_model_enter &rArr; refresh_screen &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[11]">_sputc</a> from printf6.o(i._sputc) referenced from printf6.o(i.__0sprintf$6)
 <LI><a href="#[4]">ble_device_on_connect</a> from app.o(.text) referenced from juma_sdk_lib.o(descriptor)
 <LI><a href="#[5]">ble_device_on_disconnect</a> from app.o(.text) referenced from juma_sdk_lib.o(descriptor)
 <LI><a href="#[6]">ble_device_on_message</a> from app.o(.text) referenced from juma_sdk_lib.o(descriptor)
 <LI><a href="#[10]">button_event_one_two</a> from model_contral.o(.text) referenced from model_contral.o(.text)
 <LI><a href="#[e]">button_is_long_push</a> from model_contral.o(.text) referenced from model_contral.o(.text)
 <LI><a href="#[f]">button_scan</a> from model_contral.o(.text) referenced from model_contral.o(.text)
 <LI><a href="#[2]">gpio_on_change</a> from app.o(.text) referenced from juma_sdk_lib.o(descriptor)
 <LI><a href="#[c]">hall_change</a> from normal.o(.text) referenced from normal.o(.text)
 <LI><a href="#[0]">on_init</a> from juma_sdk_lib.o(.text) referenced from juma_sdk_lib.o(descriptor)
 <LI><a href="#[1]">on_ready</a> from app.o(.text) referenced from juma_sdk_lib.o(descriptor)
 <LI><a href="#[d]">on_timer</a> from normal.o(.text) referenced from normal.o(.text)
 <LI><a href="#[7]">serial_on_data</a> from juma_sdk_lib.o(.text) referenced from juma_sdk_lib.o(descriptor)
 <LI><a href="#[9]">system_open</a> from start.o(.text) referenced from start.o(.text)
 <LI><a href="#[8]">system_start</a> from start.o(.text) referenced from app.o(.text)
 <LI><a href="#[a]">system_start_process</a> from start.o(.text) referenced from start.o(.text)
 <LI><a href="#[3]">timer_on_fired</a> from app.o(.text) referenced from juma_sdk_lib.o(descriptor)
 <LI><a href="#[b]">two_click</a> from normal.o(.text) referenced from normal.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[62]"></a>__asm___5_app_c_8743990d____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app.o(.rev16_text), UNUSED)

<P><STRONG><a name="[63]"></a>__asm___6_stop_c_e604f798____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stop.o(.rev16_text), UNUSED)

<P><STRONG><a name="[64]"></a>__asm___7_start_c_cbb6ce15____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, start.o(.rev16_text), UNUSED)

<P><STRONG><a name="[65]"></a>__asm___8_normal_c_edac4928____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, normal.o(.rev16_text), UNUSED)

<P><STRONG><a name="[66]"></a>__asm___7_timer_c_f4d41034____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, timer.o(.rev16_text), UNUSED)

<P><STRONG><a name="[67]"></a>__asm___8_train1_c_89c4e626____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, train1.o(.rev16_text), UNUSED)

<P><STRONG><a name="[68]"></a>__asm___8_train2_c_340e8ae8____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, train2.o(.rev16_text), UNUSED)

<P><STRONG><a name="[69]"></a>__asm___8_train3_c_e998536d____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, train3.o(.rev16_text), UNUSED)

<P><STRONG><a name="[6a]"></a>__asm___8_train4_c_94eb5535____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, train4.o(.rev16_text), UNUSED)

<P><STRONG><a name="[6b]"></a>__asm___7_count_c_f4b02b1e____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, count.o(.rev16_text), UNUSED)

<P><STRONG><a name="[6c]"></a>__asm___9_ssd1306_c_22c40832____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ssd1306.o(.rev16_text), UNUSED)

<P><STRONG><a name="[6d]"></a>__asm___5_app_c_8743990d____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app.o(.revsh_text), UNUSED)

<P><STRONG><a name="[6e]"></a>__asm___6_stop_c_e604f798____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stop.o(.revsh_text), UNUSED)

<P><STRONG><a name="[6f]"></a>__asm___7_start_c_cbb6ce15____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, start.o(.revsh_text), UNUSED)

<P><STRONG><a name="[70]"></a>__asm___8_normal_c_edac4928____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, normal.o(.revsh_text), UNUSED)

<P><STRONG><a name="[71]"></a>__asm___7_timer_c_f4d41034____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, timer.o(.revsh_text), UNUSED)

<P><STRONG><a name="[72]"></a>__asm___8_train1_c_89c4e626____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, train1.o(.revsh_text), UNUSED)

<P><STRONG><a name="[73]"></a>__asm___8_train2_c_340e8ae8____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, train2.o(.revsh_text), UNUSED)

<P><STRONG><a name="[74]"></a>__asm___8_train3_c_e998536d____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, train3.o(.revsh_text), UNUSED)

<P><STRONG><a name="[75]"></a>__asm___8_train4_c_94eb5535____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, train4.o(.revsh_text), UNUSED)

<P><STRONG><a name="[76]"></a>__asm___7_count_c_f4b02b1e____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, count.o(.revsh_text), UNUSED)

<P><STRONG><a name="[77]"></a>__asm___9_ssd1306_c_22c40832____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ssd1306.o(.revsh_text), UNUSED)

<P><STRONG><a name="[12]"></a>sys_driver_init</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sys_driver_init &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_config
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_setup
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_write
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_watch
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_setup
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_init_screen
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_clear
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_all
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ready
</UL>

<P><STRONG><a name="[1]"></a>on_ready</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = on_ready &rArr; sys_driver_init &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_at_time
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_time
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_driver_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> juma_sdk_lib.o(descriptor)
</UL>
<P><STRONG><a name="[1f]"></a>on_sys_open</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = on_sys_open &rArr; model_contral_init &rArr; model_change &rArr; normal_model_enter &rArr; refresh_screen &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_contral_init
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_start_advertising
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_set_name
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_open
</UL>

<P><STRONG><a name="[4]"></a>ble_device_on_connect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> juma_sdk_lib.o(descriptor)
</UL>
<P><STRONG><a name="[5]"></a>ble_device_on_disconnect</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_device_on_disconnect
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_start_advertising
</UL>
<BR>[Address Reference Count : 1]<UL><LI> juma_sdk_lib.o(descriptor)
</UL>
<P><STRONG><a name="[6]"></a>ble_device_on_message</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> juma_sdk_lib.o(descriptor)
</UL>
<P><STRONG><a name="[2]"></a>gpio_on_change</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_on_change
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hall_change_for_contral
</UL>
<BR>[Address Reference Count : 1]<UL><LI> juma_sdk_lib.o(descriptor)
</UL>
<P><STRONG><a name="[3]"></a>timer_on_fired</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> juma_sdk_lib.o(descriptor)
</UL>
<P><STRONG><a name="[24]"></a>system_off</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = system_off &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_set_font
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_draw_string
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_write
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_setup
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_clear
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_all
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_is_long_push
</UL>

<P><STRONG><a name="[9]"></a>system_open</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, start.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = system_open &rArr; on_sys_open &rArr; model_contral_init &rArr; model_change &rArr; normal_model_enter &rArr; refresh_screen &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_read
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_write
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_setup
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_sys_open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> start.o(.text)
</UL>
<P><STRONG><a name="[a]"></a>system_start_process</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, start.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = system_start_process &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_when_idle
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_read
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_fill_rect
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_at_time
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_time
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_all
</UL>
<BR>[Address Reference Count : 1]<UL><LI> start.o(.text)
</UL>
<P><STRONG><a name="[8]"></a>system_start</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, start.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = system_start &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_read
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_draw_rect
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_at_time
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_clear
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_time
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_all
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.text)
</UL>
<P><STRONG><a name="[78]"></a>system_start_enter</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, start.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>system_start_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, start.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>normal_model_enter</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, normal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = normal_model_enter &rArr; refresh_screen &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_screen
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_change
</UL>

<P><STRONG><a name="[32]"></a>normal_model_exit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, normal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = normal_model_exit &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_clear
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_all
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_change
</UL>

<P><STRONG><a name="[33]"></a>timer_model_enter</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = timer_model_enter &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_set_font
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_draw_string
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_all
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_change
</UL>

<P><STRONG><a name="[34]"></a>timer_model_exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = timer_model_exit &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_clear
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_all
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_change
</UL>

<P><STRONG><a name="[35]"></a>train1_model_enter</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, train1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = train1_model_enter &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_set_font
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_draw_string
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_all
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_change
</UL>

<P><STRONG><a name="[36]"></a>train1_model_exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, train1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = train1_model_exit &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_clear
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_all
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_change
</UL>

<P><STRONG><a name="[37]"></a>train2_model_enter</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, train2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = train2_model_enter &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_set_font
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_draw_string
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_all
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_change
</UL>

<P><STRONG><a name="[38]"></a>train2_model_exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, train2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = train2_model_exit &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_clear
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_all
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_change
</UL>

<P><STRONG><a name="[39]"></a>train3_model_enter</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, train3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = train3_model_enter &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_set_font
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_draw_string
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_all
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_change
</UL>

<P><STRONG><a name="[3a]"></a>train3_model_exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, train3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = train3_model_exit &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_clear
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_all
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_change
</UL>

<P><STRONG><a name="[3b]"></a>train4_model_enter</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, train4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = train4_model_enter &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_set_font
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_draw_string
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_all
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_change
</UL>

<P><STRONG><a name="[3c]"></a>train4_model_exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, train4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = train4_model_exit &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_clear
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_all
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_change
</UL>

<P><STRONG><a name="[3d]"></a>count_model_enter</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, count.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = count_model_enter &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_set_font
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_draw_string
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_all
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_change
</UL>

<P><STRONG><a name="[3e]"></a>count_model_exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, count.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = count_model_exit &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_clear
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_all
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_change
</UL>

<P><STRONG><a name="[3f]"></a>model_change</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, model_contral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = model_change &rArr; normal_model_enter &rArr; refresh_screen &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_model_exit
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_model_enter
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train4_model_exit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train4_model_enter
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train3_model_exit
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train3_model_enter
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train2_model_exit
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train2_model_enter
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train1_model_exit
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train1_model_enter
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_model_exit
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_model_enter
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normal_model_exit
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normal_model_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_event_one_two
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_contral_init
</UL>

<P><STRONG><a name="[23]"></a>hall_change_for_contral</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, model_contral.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_on_change
</UL>

<P><STRONG><a name="[e]"></a>button_is_long_push</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, model_contral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = button_is_long_push &rArr; system_off &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_read
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_off
</UL>
<BR>[Address Reference Count : 1]<UL><LI> model_contral.o(.text)
</UL>
<P><STRONG><a name="[10]"></a>button_event_one_two</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, model_contral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = button_event_one_two &rArr; model_change &rArr; normal_model_enter &rArr; refresh_screen &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_change
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_read
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_at_time
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_time
</UL>
<BR>[Address Reference Count : 1]<UL><LI> model_contral.o(.text)
</UL>
<P><STRONG><a name="[f]"></a>button_scan</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, model_contral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = button_scan
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_read
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_at_time
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_time
</UL>
<BR>[Address Reference Count : 1]<UL><LI> model_contral.o(.text)
</UL>
<P><STRONG><a name="[41]"></a>button_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, model_contral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = button_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_at_time
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_setup
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_time
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_contral_init
</UL>

<P><STRONG><a name="[7a]"></a>screen_on</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, model_contral.o(.text), UNUSED)

<P><STRONG><a name="[7b]"></a>screen_off</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, model_contral.o(.text), UNUSED)

<P><STRONG><a name="[20]"></a>model_contral_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, model_contral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = model_contral_init &rArr; model_change &rArr; normal_model_enter &rArr; refresh_screen &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_change
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_sys_open
</UL>

<P><STRONG><a name="[7c]"></a>ssd1306_Init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ssd1306.o(.text), UNUSED)

<P><STRONG><a name="[16]"></a>ssd1306_config</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ssd1306.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_driver_init
</UL>

<P><STRONG><a name="[42]"></a>IIC_Start</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ssd1306.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIC_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SCLK_Clr
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SDIN_Clr
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SDIN_Set
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SCLK_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_IIC_Data
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_IIC_Command
</UL>

<P><STRONG><a name="[47]"></a>IIC_Stop</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ssd1306.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SCLK_Clr
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SDIN_Clr
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SDIN_Set
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SCLK_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_IIC_Data
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_IIC_Command
</UL>

<P><STRONG><a name="[48]"></a>Write_IIC_Byte</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ssd1306.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SCLK_Clr
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SDIN_Clr
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SDIN_Set
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SCLK_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_IIC_Data
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_IIC_Command
</UL>

<P><STRONG><a name="[49]"></a>Write_IIC_Command</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ssd1306.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_IIC_Byte
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>

<P><STRONG><a name="[4a]"></a>Write_IIC_Data</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ssd1306.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_IIC_Byte
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>

<P><STRONG><a name="[4b]"></a>OLED_WR_Byte</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, ssd1306.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_IIC_Byte
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_On
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Display_Off
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Display_On
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Set_Pos
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_picture
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_all
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
</UL>

<P><STRONG><a name="[4c]"></a>fill_picture</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, ssd1306.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>

<P><STRONG><a name="[7d]"></a>Delay_50ms</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ssd1306.o(.text), UNUSED)

<P><STRONG><a name="[7e]"></a>Delay_1ms</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ssd1306.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>OLED_Set_Pos</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ssd1306.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>

<P><STRONG><a name="[4e]"></a>OLED_Display_On</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ssd1306.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>

<P><STRONG><a name="[4f]"></a>OLED_Display_Off</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ssd1306.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>

<P><STRONG><a name="[18]"></a>OLED_Clear</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ssd1306.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OLED_Clear &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_model_exit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train4_model_exit
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train3_model_exit
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train2_model_exit
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train1_model_exit
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_model_exit
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normal_model_exit
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_driver_init
</UL>

<P><STRONG><a name="[50]"></a>OLED_On</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ssd1306.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>

<P><STRONG><a name="[1b]"></a>OLED_Refresh_all</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, ssd1306.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_model_exit
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_model_enter
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train4_model_exit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train4_model_enter
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train3_model_exit
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train3_model_enter
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train2_model_exit
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train2_model_enter
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train1_model_exit
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train1_model_enter
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_model_exit
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_model_enter
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normal_model_exit
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_screen
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_start_process
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_off
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_start
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_driver_init
</UL>

<P><STRONG><a name="[17]"></a>OLED_Init</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, ssd1306.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OLED_Init &rArr; OLED_Clear &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_driver_init
</UL>

<P><STRONG><a name="[0]"></a>on_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, juma_sdk_lib.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> juma_sdk_lib.o(descriptor)
</UL>
<P><STRONG><a name="[7]"></a>serial_on_data</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, juma_sdk_lib.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> juma_sdk_lib.o(descriptor)
</UL>
<P><STRONG><a name="[7f]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[51]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[56]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[57]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[58]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[59]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>

<P><STRONG><a name="[80]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[81]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[82]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[53]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[83]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[55]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[54]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[5d]"></a>__0sprintf$6</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf6.o(i.__0sprintf$6), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[84]"></a>__1sprintf$6</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf6.o(i.__0sprintf$6), UNUSED)

<P><STRONG><a name="[2c]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf6.o(i.__0sprintf$6))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_screen
</UL>

<P><STRONG><a name="[5c]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[40]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, model_contral.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_change
</UL>

<P><STRONG><a name="[85]"></a>adc_measure</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.adc_measure), UNUSED)

<P><STRONG><a name="[86]"></a>ble_device_disconnect</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.ble_device_disconnect), UNUSED)

<P><STRONG><a name="[87]"></a>ble_device_get_id</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.ble_device_get_id), UNUSED)

<P><STRONG><a name="[88]"></a>ble_device_is_connected</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.ble_device_is_connected), UNUSED)

<P><STRONG><a name="[89]"></a>ble_device_select_address</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.ble_device_select_address), UNUSED)

<P><STRONG><a name="[8a]"></a>ble_device_send</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.ble_device_send), UNUSED)

<P><STRONG><a name="[8b]"></a>ble_device_set_advertising_interval</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.ble_device_set_advertising_interval), UNUSED)

<P><STRONG><a name="[21]"></a>ble_device_set_name</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.ble_device_set_name))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_sys_open
</UL>

<P><STRONG><a name="[8c]"></a>ble_device_set_tx_power</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.ble_device_set_tx_power), UNUSED)

<P><STRONG><a name="[22]"></a>ble_device_start_advertising</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.ble_device_start_advertising))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_on_disconnect
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_sys_open
</UL>

<P><STRONG><a name="[8d]"></a>ble_device_stop_advertising</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.ble_device_stop_advertising), UNUSED)

<P><STRONG><a name="[1d]"></a>current_time</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.current_time))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_init
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_scan
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_event_one_two
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_start_process
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_start
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ready
</UL>

<P><STRONG><a name="[8e]"></a>data_storage_erase_page_by_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.data_storage_erase_page_by_addr), UNUSED)

<P><STRONG><a name="[8f]"></a>data_storage_program</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.data_storage_program), UNUSED)

<P><STRONG><a name="[90]"></a>data_storage_read</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.data_storage_read), UNUSED)

<P><STRONG><a name="[91]"></a>get_temperature</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.get_temperature), UNUSED)

<P><STRONG><a name="[1a]"></a>gfx_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.gfx_clear))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_model_exit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train4_model_exit
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train3_model_exit
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train2_model_exit
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train1_model_exit
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_model_exit
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normal_model_exit
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_screen
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_off
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_start
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_driver_init
</UL>

<P><STRONG><a name="[92]"></a>gfx_draw_char</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, juma_sdk_lib.o(i.gfx_draw_char), UNUSED)

<P><STRONG><a name="[93]"></a>gfx_draw_circle</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, juma_sdk_lib.o(i.gfx_draw_circle), UNUSED)

<P><STRONG><a name="[94]"></a>gfx_draw_image</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, juma_sdk_lib.o(i.gfx_draw_image), UNUSED)

<P><STRONG><a name="[95]"></a>gfx_draw_line</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, juma_sdk_lib.o(i.gfx_draw_line), UNUSED)

<P><STRONG><a name="[96]"></a>gfx_draw_pixel</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.gfx_draw_pixel), UNUSED)

<P><STRONG><a name="[2a]"></a>gfx_draw_rect</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, juma_sdk_lib.o(i.gfx_draw_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gfx_draw_rect
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_start
</UL>

<P><STRONG><a name="[26]"></a>gfx_draw_string</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, juma_sdk_lib.o(i.gfx_draw_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gfx_draw_string
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_model_enter
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train4_model_enter
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train3_model_enter
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train2_model_enter
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train1_model_enter
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_model_enter
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_screen
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_off
</UL>

<P><STRONG><a name="[97]"></a>gfx_fill_circle</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, juma_sdk_lib.o(i.gfx_fill_circle), UNUSED)

<P><STRONG><a name="[28]"></a>gfx_fill_rect</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, juma_sdk_lib.o(i.gfx_fill_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gfx_fill_rect
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_start_process
</UL>

<P><STRONG><a name="[19]"></a>gfx_init_screen</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, juma_sdk_lib.o(i.gfx_init_screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gfx_init_screen
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_driver_init
</UL>

<P><STRONG><a name="[25]"></a>gfx_set_font</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.gfx_set_font))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_model_enter
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train4_model_enter
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train3_model_enter
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train2_model_enter
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;train1_model_enter
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_model_enter
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_screen
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_off
</UL>

<P><STRONG><a name="[27]"></a>gpio_read</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.gpio_read))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_scan
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_event_one_two
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_is_long_push
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_start_process
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_open
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_start
</UL>

<P><STRONG><a name="[13]"></a>gpio_setup</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.gpio_setup))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_init
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_open
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_off
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_driver_init
</UL>

<P><STRONG><a name="[98]"></a>gpio_unwatch</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.gpio_unwatch), UNUSED)

<P><STRONG><a name="[1c]"></a>gpio_watch</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.gpio_watch))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_driver_init
</UL>

<P><STRONG><a name="[14]"></a>gpio_write</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.gpio_write))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_open
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_off
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_driver_init
</UL>

<P><STRONG><a name="[99]"></a>light_off</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.light_off), UNUSED)

<P><STRONG><a name="[2e]"></a>light_on</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.light_on))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_timer
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;two_click
</UL>

<P><STRONG><a name="[2d]"></a>light_set_color</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.light_set_color))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_timer
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;two_click
</UL>

<P><STRONG><a name="[15]"></a>light_setup</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.light_setup))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_driver_init
</UL>

<P><STRONG><a name="[9a]"></a>play_sound</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.play_sound), UNUSED)

<P><STRONG><a name="[1e]"></a>run_at_time</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.run_at_time))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_init
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_scan
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_event_one_two
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_start_process
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_start
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ready
</UL>

<P><STRONG><a name="[29]"></a>run_when_idle</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.run_when_idle))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_start_process
</UL>

<P><STRONG><a name="[9b]"></a>serial_send</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.serial_send), UNUSED)

<P><STRONG><a name="[9c]"></a>serial_setup</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.serial_setup), UNUSED)

<P><STRONG><a name="[30]"></a>timer_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.timer_init))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normal_model_enter
</UL>

<P><STRONG><a name="[31]"></a>timer_start</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.timer_start))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normal_model_enter
</UL>

<P><STRONG><a name="[9d]"></a>timer_stop</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.timer_stop), UNUSED)

<P><STRONG><a name="[9e]"></a>vcc_measure</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, juma_sdk_lib.o(i.vcc_measure), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[2b]"></a>refresh_screen</STRONG> (Thumb, 54 bytes, Stack size 136 bytes, normal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = refresh_screen &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_set_font
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_draw_string
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfx_clear
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_all
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normal_model_enter
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hall_change
</UL>

<P><STRONG><a name="[b]"></a>two_click</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, normal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = two_click
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_set_color
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_on
</UL>
<BR>[Address Reference Count : 1]<UL><LI> normal.o(.text)
</UL>
<P><STRONG><a name="[c]"></a>hall_change</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, normal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = hall_change &rArr; refresh_screen &rArr; OLED_Refresh_all &rArr; OLED_WR_Byte &rArr; Write_IIC_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_screen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> normal.o(.text)
</UL>
<P><STRONG><a name="[d]"></a>on_timer</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, normal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = on_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_set_color
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_on
</UL>
<BR>[Address Reference Count : 1]<UL><LI> normal.o(.text)
</UL>
<P><STRONG><a name="[43]"></a>OLED_SCLK_Set</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ssd1306.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_IIC_Byte
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>

<P><STRONG><a name="[44]"></a>OLED_SDIN_Set</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ssd1306.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_IIC_Byte
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>

<P><STRONG><a name="[45]"></a>OLED_SDIN_Clr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ssd1306.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_IIC_Byte
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>

<P><STRONG><a name="[46]"></a>OLED_SCLK_Clr</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ssd1306.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_IIC_Byte
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>

<P><STRONG><a name="[5e]"></a>_printf_core</STRONG> (Thumb, 768 bytes, Stack size 96 bytes, printf6.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$6
</UL>

<P><STRONG><a name="[60]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printf6.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[5f]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printf6.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[11]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf6.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$6
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf6.o(i.__0sprintf$6)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
